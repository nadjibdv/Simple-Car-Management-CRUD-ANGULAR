{"ast":null,"code":"import _asyncToGenerator from \"H:\\\\code\\\\RECORDP\\\\ANGULAR\\\\Project CarWebApi\\\\CarProject1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServicecarService {\n  constructor(httpP) {\n    this.httpP = httpP;\n    this.url = \"https://localhost:44377/api/\";\n  }\n\n  getAllCars() {\n    this.httpP.get(\"https://localhost:44377/api/car\").toPromise().then(res => {\n      this.carsall = res;\n      console.log(\"---------- CAR -----------\");\n      console.log(res);\n    });\n  }\n\n  getUrlImage(filename) {\n    return this.url.replace(\"api/\", \"\") + \"images/\" + filename;\n  }\n\n  getAllPerson() {\n    this.httpP.get(this.url + \"person\").toPromise().then(res => {\n      this.people = res;\n    });\n  }\n\n  getPerson(id) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.httpP.get(_this.url + \"person/\" + id).toPromise().then(res => {\n        return res;\n      });\n    })();\n  }\n\n  addPerson(newPerson) {\n    const headers = {\n      'content-type': 'application/json'\n    };\n    const body = JSON.stringify(newPerson);\n    this.httpP.post(this.url + \"person\", body, {\n      'headers': headers\n    }).toPromise().then(r => {\n      this.router.navigate(['person']);\n    });\n  }\n\n  editPerson(id, updatePerson) {\n    const headers = {\n      'content-type': 'application/json'\n    };\n    const body = JSON.stringify(updatePerson);\n    this.httpP.put(this.url + \"person/\" + id, body, {\n      'headers': headers\n    }).toPromise();\n    this.router.navigate(['person']);\n  }\n\n  deletePerson(id) {\n    this.httpP.delete(this.url + \"person/\" + id).toPromise();\n    this.router.navigate(['person']);\n  }\n\n}\n\nServicecarService.ɵfac = function ServicecarService_Factory(t) {\n  return new (t || ServicecarService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nServicecarService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServicecarService,\n  factory: ServicecarService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["H:/code/RECORDP/ANGULAR/Project CarWebApi/CarProject1/src/app/models/servicecar.service.ts"],"names":["i0","i1","ServicecarService","constructor","httpP","url","getAllCars","get","toPromise","then","res","carsall","console","log","getUrlImage","filename","replace","getAllPerson","people","getPerson","id","addPerson","newPerson","headers","body","JSON","stringify","post","r","router","navigate","editPerson","updatePerson","put","deletePerson","delete","ɵfac","ServicecarService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class ServicecarService {\r\n    constructor(httpP) {\r\n        this.httpP = httpP;\r\n        this.url = \"https://localhost:44377/api/\";\r\n    }\r\n    getAllCars() {\r\n        this.httpP.get(\"https://localhost:44377/api/car\").toPromise().then(res => {\r\n            this.carsall = res;\r\n            console.log(\"---------- CAR -----------\");\r\n            console.log(res);\r\n        });\r\n    }\r\n    getUrlImage(filename) {\r\n        return this.url.replace(\"api/\", \"\") + \"images/\" + filename;\r\n    }\r\n    getAllPerson() {\r\n        this.httpP.get(this.url + \"person\").toPromise().then(res => {\r\n            this.people = res;\r\n        });\r\n    }\r\n    async getPerson(id) {\r\n        return await this.httpP.get(this.url + \"person/\" + id).toPromise().then(res => {\r\n            return res;\r\n        });\r\n    }\r\n    addPerson(newPerson) {\r\n        const headers = { 'content-type': 'application/json' };\r\n        const body = JSON.stringify(newPerson);\r\n        this.httpP.post(this.url + \"person\", body, { 'headers': headers }).toPromise().then(r => {\r\n            this.router.navigate(['person']);\r\n        });\r\n    }\r\n    editPerson(id, updatePerson) {\r\n        const headers = { 'content-type': 'application/json' };\r\n        const body = JSON.stringify(updatePerson);\r\n        this.httpP.put(this.url + \"person/\" + id, body, { 'headers': headers }).toPromise();\r\n        this.router.navigate(['person']);\r\n    }\r\n    deletePerson(id) {\r\n        this.httpP.delete(this.url + \"person/\" + id).toPromise();\r\n        this.router.navigate(['person']);\r\n    }\r\n}\r\nServicecarService.ɵfac = function ServicecarService_Factory(t) { return new (t || ServicecarService)(i0.ɵɵinject(i1.HttpClient)); };\r\nServicecarService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ServicecarService, factory: ServicecarService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}