{"ast":null,"code":"import _asyncToGenerator from \"H:\\\\code\\\\RECORDP\\\\ANGULAR\\\\Project CarWebApi\\\\CarProject1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class ServicepersonService {\n  constructor(httpP, router) {\n    this.httpP = httpP;\n    this.router = router;\n    this.url = \"https://localhost:44377/api/\";\n  }\n\n  getAllPerson() {\n    this.httpP.get(this.url + \"person\").toPromise().then(res => {\n      this.people = res;\n    });\n  }\n\n  getPerson(id) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.httpP.get(_this.url + \"person/\" + id).toPromise().then(res => {\n        return res;\n      });\n    })();\n  }\n\n  addPerson(newPerson) {\n    const headers = {\n      'content-type': 'application/json'\n    };\n    const body = JSON.stringify(newPerson);\n    this.httpP.post(this.url + \"person\", body, {\n      'headers': headers\n    }).toPromise().then(r => {\n      this.router.navigate(['person']);\n    });\n  }\n\n  addNewCar(newPerson) {\n    const headers = {\n      'content-type': 'application/json'\n    };\n    const body = JSON.stringify(newPerson);\n    this.httpP.post(this.url + \"car\", body, {\n      'headers': headers\n    }).toPromise().then(r => {\n      this.router.navigate(['cars']);\n    });\n  }\n\n  editPerson(id, updatePerson) {\n    const headers = {\n      'content-type': 'application/json'\n    };\n    const body = JSON.stringify(updatePerson);\n    this.httpP.put(this.url + \"person/\" + id, body, {\n      'headers': headers\n    }).toPromise();\n    this.router.navigate(['person']);\n  }\n\n  deletePerson(id) {\n    this.httpP.delete(this.url + \"person/\" + id).toPromise();\n    this.router.navigate(['person']);\n  }\n\n}\n\nServicepersonService.ɵfac = function ServicepersonService_Factory(t) {\n  return new (t || ServicepersonService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n\nServicepersonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServicepersonService,\n  factory: ServicepersonService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["H:/code/RECORDP/ANGULAR/Project CarWebApi/CarProject1/src/app/models/serviceperson.service.ts"],"names":["i0","i1","i2","ServicepersonService","constructor","httpP","router","url","getAllPerson","get","toPromise","then","res","people","getPerson","id","addPerson","newPerson","headers","body","JSON","stringify","post","r","navigate","addNewCar","editPerson","updatePerson","put","deletePerson","delete","ɵfac","ServicepersonService_Factory","t","ɵɵinject","HttpClient","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"@angular/router\";\r\nexport class ServicepersonService {\r\n    constructor(httpP, router) {\r\n        this.httpP = httpP;\r\n        this.router = router;\r\n        this.url = \"https://localhost:44377/api/\";\r\n    }\r\n    getAllPerson() {\r\n        this.httpP.get(this.url + \"person\").toPromise().then(res => {\r\n            this.people = res;\r\n        });\r\n    }\r\n    async getPerson(id) {\r\n        return await this.httpP.get(this.url + \"person/\" + id).toPromise().then(res => {\r\n            return res;\r\n        });\r\n    }\r\n    addPerson(newPerson) {\r\n        const headers = { 'content-type': 'application/json' };\r\n        const body = JSON.stringify(newPerson);\r\n        this.httpP.post(this.url + \"person\", body, { 'headers': headers }).toPromise().then(r => {\r\n            this.router.navigate(['person']);\r\n        });\r\n    }\r\n    addNewCar(newPerson) {\r\n        const headers = { 'content-type': 'application/json' };\r\n        const body = JSON.stringify(newPerson);\r\n        this.httpP.post(this.url + \"car\", body, { 'headers': headers }).toPromise().then(r => {\r\n            this.router.navigate(['cars']);\r\n        });\r\n    }\r\n    editPerson(id, updatePerson) {\r\n        const headers = { 'content-type': 'application/json' };\r\n        const body = JSON.stringify(updatePerson);\r\n        this.httpP.put(this.url + \"person/\" + id, body, { 'headers': headers }).toPromise();\r\n        this.router.navigate(['person']);\r\n    }\r\n    deletePerson(id) {\r\n        this.httpP.delete(this.url + \"person/\" + id).toPromise();\r\n        this.router.navigate(['person']);\r\n    }\r\n}\r\nServicepersonService.ɵfac = function ServicepersonService_Factory(t) { return new (t || ServicepersonService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router)); };\r\nServicepersonService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ServicepersonService, factory: ServicepersonService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}